name: SecurePipeline360 CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  security-events: write   # needed for SARIF uploads
  actions: read

jobs:
  security-scans:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ---------- Build the Docker image with the SAME tag you'll scan ----------
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image (must match image-ref below)
        run: docker build -t securepipeline360:local .

      # ---------- Trivy: Filesystem scan (repo + deps) ----------
      - name: Trivy FS scan (repo)
        uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: 'fs'
          format: 'sarif'
          output: 'trivy-fs.sarif'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
          exit-code: '1'

      # Try Code Scanning upload (skip failure if disabled)
      - name: Upload Trivy FS SARIF (to Code Scanning)
        uses: github/codeql-action/upload-sarif@v3
        continue-on-error: true
        with:
          sarif_file: trivy-fs.sarif

      # Always keep artifact as fallback
      - name: Upload Trivy FS report (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: trivy-fs.sarif
          path: trivy-fs.sarif

      # ---------- Trivy: Image scan (the image we just built) ----------
      - name: Trivy Image scan
        uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: 'image'
          image-ref: 'securepipeline360:local'
          format: 'sarif'
          output: 'trivy-image.sarif'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
          exit-code: '1'

      - name: Upload Trivy Image SARIF (to Code Scanning)
        uses: github/codeql-action/upload-sarif@v3
        continue-on-error: true
        with:
          sarif_file: trivy-image.sarif

      - name: Upload Trivy Image report (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: trivy-image.sarif
          path: trivy-image.sarif

      # ---------- Checkov: IaC scan (Terraform/Kubernetes/Compose) ----------
      - name: Checkov IaC scan
        uses: bridgecrewio/checkov-action@master
        with:
          directory: .
          output_format: sarif
          output_file_path: checkov.sarif
          quiet: true

      - name: Upload Checkov SARIF (to Code Scanning)
        uses: github/codeql-action/upload-sarif@v3
        continue-on-error: true
        with:
          sarif_file: checkov.sarif

      - name: Upload Checkov report (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: checkov.sarif
          path: checkov.sarif

